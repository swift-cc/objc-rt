--- objc2/runtime/objc-block-trampolines.mm	2014-09-05 16:16:57.000000000 -0700
+++ objc/runtime/objc-block-trampolines.mm	2014-09-05 16:18:15.000000000 -0700
@@ -69,7 +69,7 @@
 // unsigned value, any value, larger thna # of blocks that fit in the page pair
 #define LAST_SLOT_MARKER 4241
 
-#define TRAMPOLINE_PAGE_PAIR_HEADER_SIZE (sizeof(uint32_t) + sizeof(struct _TrampolineBlockPagePair *) + sizeof(struct _TrampolineBlockPagePair *))
+#define TRAMPOLINE_PAGE_PAIR_HEADER_SIZE (sizeof(uint32_t) + sizeof(void*) + sizeof(void*))
 typedef struct _TrampolineBlockPagePair {
     struct _TrampolineBlockPagePair *nextPagePair; // linked list of all page pairs
     struct _TrampolineBlockPagePair *nextAvailablePage; // linked list of pages with available slots
@@ -78,11 +78,11 @@
 
     // Data: block pointers and free list.
     // Bytes parallel with trampoline header are the fields above, or unused.
-    uint8_t blocks[ PAGE_SIZE - TRAMPOLINE_PAGE_PAIR_HEADER_SIZE ] 
+    uint8_t blocks[ 4096 - TRAMPOLINE_PAGE_PAIR_HEADER_SIZE ] 
     __attribute__((unavailable)) /* always use _headerSize() */;
 
     // Code: trampoline header followed by trampolines.
-    uint8_t trampolines[PAGE_SIZE];
+    uint8_t trampolines[4096];
 
     // Per-trampoline block data format:
     // initial value is 0 while page pair is filled sequentially (last slot is LAST_SLOT_MARKER to indicate end of page)
